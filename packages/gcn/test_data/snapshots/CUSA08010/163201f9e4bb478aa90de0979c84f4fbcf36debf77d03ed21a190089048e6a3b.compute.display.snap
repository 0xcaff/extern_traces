0x0000: s_mov_b32 vcc_hi, 0x42
0x0008: v_lshrrev_b32 v2, 1, v0
0x000c: v_and_b32 v1, 21, v0
0x0010: v_and_b32 v2, 21, v2
0x0014: v_lshrrev_b32 v4, 1, v1
0x0018: v_lshrrev_b32 v3, 1, v2
0x001c: v_or_b32 v1, v4, v1
0x0020: v_or_b32 v2, v3, v2
0x0024: v_and_b32 v1, 19, v1
0x0028: v_and_b32 v2, 19, v2
0x002c: v_lshrrev_b32 v4, 2, v1
0x0030: v_lshrrev_b32 v3, 2, v2
0x0034: v_or_b32 v1, v4, v1
0x0038: v_or_b32 v2, v3, v2
0x003c: v_and_b32 v1, 7, v1
0x0040: v_and_b32 v2, 7, v2
0x0044: s_lshl_b32 vcc_hi, s3, 3
0x0048: s_lshl_b32 s5, s4, 4
0x004c: s_add_i32 s3, s5, 8
0x0050: s_lshl_b32 vcc_lo, s2, 3
0x0054: s_load_dwordx2 s[2:3], s[0:1], 0x3
0x0058: s_load_dwordx2 s[6:7], s[0:1], 0x5
0x005c: v_or_b32 v6, vcc_lo, v1
0x0060: v_or_b32 v7, vcc_hi, v2
0x0064: v_cvt_f32_u32 v2, v6
0x0068: s_load_dwordx2 s[8:9], s[0:1], 0x1b
0x006c: s_waitcnt 0x7f
0x0070: v_mov_b32 v8, s2
0x0074: v_cvt_f32_u32 v1, v7
0x0078: v_mov_b32 v9, s3
0x007c: v_mac_f32 v8, s6, v2
0x0080: v_add_f32 v2, s8, abs(v8), -s0
0x0088: v_mac_f32 v9, s7, v1
0x008c: v_add_f32 v1, s8, abs(v9), -s0
0x0094: v_max_f32 v2, 0, v2
0x0098: v_max_f32 v1, 0, v1
0x009c: v_mul_f32 v2, v2, v2
0x00a0: v_mac_f32 v2, v1, v1
0x00a4: v_cmp_nle_f32 vcc, v2, s9, s0
0x00ac: s_or_b32 vcc_lo, s4, 2
0x00b0: v_mov_b32 v5, vcc_lo
0x00b4: s_and_saveexec_b64 s[2:3], s[2:3]
0x00b8: s_cbranch_execz 0x17
0x00bc: v_mov_b32 v1, s4
0x00c0: s_load_dwordx2 s[6:7], s[0:1], 0x18
0x00c4: s_load_dword s5, s[0:1], 0x1a
0x00c8: s_waitcnt 0x7f
0x00cc: v_add_f32 v2, s6, abs(v8), -s0
0x00d4: v_max_f32 v2, 0, v2
0x00d8: v_add_f32 v4, s6, abs(v9), -s0
0x00e0: v_add_f32 v3, s6, abs(v8), s0
0x00e8: v_mul_f32 v2, v2, v2
0x00ec: v_max_f32 v4, 0, v4
0x00f0: v_mul_f32 v3, v3, v3
0x00f4: v_add_f32 v5, s6, abs(v9), s0
0x00fc: v_mac_f32 v2, v4, v4
0x0100: v_mac_f32 v3, v5, v5
0x0104: v_cmp_ge_f32 vcc, s5, v2, s0
0x010c: v_cmp_le_f32 s7, v3
0x0110: s_and_b64 vcc, vcc, s[8:9]
0x0114: v_cndmask_b32 v5, 4, v1
0x0118: s_mov_b64 exec, s[2:3]
0x011c: v_cmp_gt_u32 4, v5
0x0120: v_mov_b32 v1, 0
0x0124: s_and_saveexec_b64 vcc, vcc
0x0128: s_cbranch_execz 0x15
0x012c: v_lshlrev_b32 v1, 4, v5
0x0130: s_mov_b32 s8, s0
0x0134: s_mov_b32 s9, s1
0x0138: s_mov_b32 s10, -1
0x013c: s_mov_b32 s11, 0x2000c004
0x0144: buffer_load_dwordx4 v[1:4], v1, s[8:11], offen, offset=0x20, soffset=0x80
0x014c: s_load_dwordx4 s[16:19], s[0:1], 0x2d
0x0150: s_load_dwordx8 s[8:15], s[0:1], 0x1d
0x0154: v_cvt_f32_u32 v5, v5
0x0158: s_waitcnt 0xf70
0x015c: v_mac_f32 v3, v8, v1
0x0160: v_mac_f32 v4, v9, v2
0x0164: s_waitcnt 0x7f
0x0168: image_sample_lz v1, v[3:4], s[8:15], s[16:19], dmask(r), da
0x0170: s_waitcnt 0xf70
0x0174: v_rcp_f32 v1, v1
0x0178: v_mul_f32 v1, 0x3a83126f, v1
0x0180: s_mov_b64 exec, vcc
0x0184: unknown 
0x018c: v_and_b32 v0, 3, v0
0x0190: s_waitcnt 0x7f
0x0194: v_max_f32 v1, v2, v1
0x0198: unknown 
0x01a0: v_cmpx_eq_u32 0, v0
0x01a4: s_cbranch_execz 0xc
0x01a8: s_waitcnt 0x7f
0x01ac: v_max_f32 v0, v2, v1
0x01b0: v_mul_f32 v0, 0x3f8020c5, v0
0x01b8: s_load_dwordx8 s[8:15], s[0:1], 0x25
0x01bc: v_max_f32 v3, 0, v0
0x01c0: v_lshrrev_b32 v0, 1, v6
0x01c4: v_lshrrev_b32 v1, 1, v7
0x01c8: v_mov_b32 v2, s4
0x01cc: s_waitcnt 0x7f
0x01d0: image_store v3, v[0:1], s[8:15], s[0:3], dmask(r), da
0x01d8: s_endpgm 0x0