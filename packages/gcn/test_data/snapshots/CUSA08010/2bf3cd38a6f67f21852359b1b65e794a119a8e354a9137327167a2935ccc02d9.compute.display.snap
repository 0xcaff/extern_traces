0x0000: s_mov_b32 vcc_hi, 0x1a4
0x0008: s_lshl_b32 vcc_lo, s2, 3
0x000c: s_lshl_b32 s2, s3, 3
0x0010: s_load_dwordx2 s[12:13], s[0:1], 0x1c
0x0014: v_add_co_u32 v8, vcc_lo, v0
0x0018: v_sad_u32 v9, s2, 0, v1
0x0020: s_waitcnt 0x7f
0x0024: v_cmp_le_u32 v2, s13, v9, s0
0x002c: v_cmp_le_u32 s12, v8
0x0030: s_nor_b64 vcc, vcc, s[2:3]
0x0034: s_and_saveexec_b64 vcc, vcc
0x0038: s_cbranch_execz 0x327
0x003c: v_lshlrev_b32 v4, 11, v9
0x0040: s_load_dwordx8 s[4:11], s[0:1], 0x2a
0x0044: s_load_dwordx2 s[2:3], s[0:1], 0x67
0x0048: s_mov_b32 s14, 0x27d4eb2d
0x0050: s_waitcnt 0x7f
0x0054: image_load v[0:3], v[8:9], s[4:11], s[0:3], dmask(rgba)
0x005c: v_add_co_u32 v5, s3, v8
0x0060: v_add_co_u32 v4, v5, v4
0x0064: v_lshrrev_b32 v5, 16, v4
0x0068: v_xor_b32 v5, 61, v5
0x006c: v_xor_b32 v4, v5, v4
0x0070: v_mul_lo_i32 v4, 9, v4, s0
0x0078: v_lshrrev_b32 v5, 4, v4
0x007c: v_xor_b32 v4, v5, v4
0x0080: v_mul_lo_i32 v4, s14, v4, s0
0x0088: v_lshrrev_b32 v5, 15, v4
0x008c: v_xor_b32 v4, v5, v4
0x0090: v_cvt_f32_ubyte0 v5, v4
0x0094: v_cvt_f32_ubyte1 v6, v4
0x0098: v_add_f32 v5, v5, v6
0x009c: v_cvt_f32_ubyte2 v6, v4
0x00a0: v_add_f32 v5, v5, v6
0x00a4: v_cvt_f32_ubyte3 v4, v4
0x00a8: v_add_f32 v4, v5, v4
0x00ac: s_load_dword s15, s[0:1], 0xa
0x00b0: s_mov_b32 s16, 0x3b008081
0x00b8: v_mad_f32 v4, s16, v4, -1.f
0x00c0: s_waitcnt 0x7f
0x00c4: v_mad_f32 v4, s15, v4, 1.f
0x00cc: unknown_1 s13, 0x8002
0x00d0: s_waitcnt 0xf70
0x00d4: v_mul_f32 v11, v0, v4
0x00d8: v_mul_f32 v10, v1, v4
0x00dc: v_mul_f32 v2, v2, v4
0x00e0: s_cbranch_scc0 0xa4
0x00e4: s_load_dwordx8 s[4:11], s[0:1], 0x32
0x00e8: unknown_1 s13, 0x8502
0x00ec: s_waitcnt 0x7f
0x00f0: image_load v[4:7], v[8:9], s[4:11], s[0:3], dmask(rgba)
0x00f8: s_cselect_b64 s[14:15], exec, 0
0x00fc: s_waitcnt 0xf70
0x0100: v_add_f32 v0, 1.f, -abs(v4), s0
0x0108: v_max_f32 v0, 0x38d1b717, v0
0x0110: v_rcp_f32 v0, v0
0x0114: v_mul_f32 v1, v6, v0
0x0118: v_mad_f32 v16, -v5, v0, -v1
0x0120: v_mul_f32 v14, v4, v0
0x0124: v_mac_f32 v16, v0, v4
0x0128: v_mad_f32 v1, -v4, v0, v1
0x0130: v_cmp_neq_f32 v4, 0, v16, s0
0x0138: v_cmp_neq_f32 0, v7
0x013c: v_mac_f32 v14, v0, v6
0x0140: v_mad_f32 v13, v5, v0, v1
0x0148: v_cmp_neq_f32 v8, 0, v14, s0
0x0150: v_cmp_neq_f32 v10, 0, v13, s0
0x0158: s_or_b64 vcc, s[4:5], vcc
0x015c: s_or_b64 vcc, s[8:9], vcc
0x0160: s_or_b64 vcc, s[10:11], vcc
0x0164: s_and_saveexec_b64 s[4:5], vcc
0x0168: s_cbranch_execz 0x81
0x016c: s_and_b64 vcc, exec, s[14:15]
0x0170: s_cbranch_vccz 0x30
0x0174: v_mul_f32 v4, 0x3e99999a, v13
0x017c: v_mac_f32 v4, 0.5.f, v14
0x0180: v_madmk_f32 v4, v16, v4
0x0188: s_load_dwordx2 s[6:7], s[0:1], 0x69
0x018c: v_sub_f32 v5, v4, v13
0x0190: s_waitcnt 0x7f
0x0194: v_mad_f32 v0, s7, v5, v13
0x019c: v_sub_f32 v6, v4, v14
0x01a0: v_mul_f32 v13, v0, v0
0x01a4: v_mad_f32 v1, s7, v6, v14
0x01ac: v_sub_f32 v4, v4, v16
0x01b0: v_mac_f32 v13, v1, v1
0x01b4: v_mac_f32 v16, s7, v4
0x01b8: v_mad_f32 v14, v16, v16, v13
0x01c0: v_rsq_f32 v12, v14
0x01c4: v_mul_f32 v4, v12, v0
0x01c8: v_cmp_lt_f32 0x28800000, v14
0x01d0: v_mul_f32 v6, v12, v1
0x01d4: v_mul_f32 v12, v12, v16
0x01d8: v_cndmask_b32 v13, 0, v4
0x01dc: v_mul_f32 v4, s6, s6, s0
0x01e4: v_sqrt_f32 v14, v14
0x01e8: v_cndmask_b32 v15, 0, v6
0x01ec: v_cndmask_b32 v12, 0, v12
0x01f0: v_mul_f32 v13, v4, v13
0x01f4: v_min_f32 v6, 1.f, v14
0x01f8: v_mul_f32 v14, v4, v15
0x01fc: v_mul_f32 v12, v4, v12
0x0200: v_mac_f32 v0, v6, -v13, s0
0x0208: v_mul_f32 v13, v13, v6
0x020c: v_mac_f32 v1, v6, -v14, s0
0x0214: v_mul_f32 v14, v14, v6
0x0218: v_mac_f32 v16, v6, -v12, s0
0x0220: v_mul_f32 v6, v12, v6
0x0224: v_mad_f32 v16, v4, v16, v6
0x022c: v_mac_f32 v13, v0, v4
0x0230: v_mac_f32 v14, v1, v4
0x0234: s_load_dwordx2 s[6:7], s[0:1], 0x6b
0x0238: s_load_dword s3, s[0:1], 0x6d
0x023c: s_mov_b32 vcc_lo, 0x40a00000
0x0244: s_waitcnt 0x7f
0x0248: v_mul_f32 v0, s6, v13
0x024c: v_mul_f32 v5, v0, v0
0x0250: v_mul_f32 v1, s6, v14
0x0254: v_mul_f32 v4, s6, v16
0x0258: v_mac_f32 v5, v1, v1
0x025c: v_mad_f32 v6, v4, v4, v5
0x0264: v_mul_f32 v5, s6, v7
0x0268: v_mac_f32 v6, v5, v5
0x026c: v_sqrt_f32 v6, v6
0x0270: v_mov_b32 v7, s3
0x0274: v_mad_f32 v7, -s7, v6, v7
0x027c: v_med3_f32 v6, vcc_lo, v7, 0
0x0284: v_mul_f32 v6, 0x4038aa3b, v6
0x028c: v_exp_f32 v6, v6
0x0290: v_add_f32 v7, 1.f, v6
0x0294: v_rcp_f32 v7, v7
0x0298: v_add_f32 v6, -1.f, v6
0x029c: v_mul_f32 v6, v7, v6
0x02a0: v_cmp_lt_f32 0, v6
0x02a4: s_and_saveexec_b64 s[6:7], vcc
0x02a8: s_cbranch_execz 0x27
0x02ac: v_mul_f32 v7, v11, v11
0x02b0: v_mad_f32 v13, v10, v10, v7
0x02b8: s_load_dword s3, s[0:1], 0x6e
0x02bc: v_mac_f32 v13, v2, v2
0x02c0: v_sqrt_f32 v7, v13
0x02c4: v_min_f32 v14, 0x40a00000, v7
0x02cc: v_rsq_f32 v12, v13
0x02d0: v_mul_f32 v7, v12, v11
0x02d4: v_cmp_lt_f32 0x28800000, v13
0x02dc: s_waitcnt 0x7f
0x02e0: v_rcp_f32 v13, s3
0x02e4: v_mul_f32 v13, v13, v14
0x02e8: v_mul_f32 v13, 0x4038aa3b, v13
0x02f0: v_exp_f32 v15, v13
0x02f4: v_add_f32 v14, 1.f, v15
0x02f8: v_mul_f32 v13, v12, v10
0x02fc: v_mul_f32 v12, v12, v2
0x0300: v_rcp_f32 v14, v14
0x0304: v_add_f32 v15, -1.f, v15
0x0308: v_cndmask_b32 v16, 0, v7
0x030c: v_cndmask_b32 v13, 0, v13
0x0310: v_cndmask_b32 v12, 0, v12
0x0314: v_mul_f32 v7, v14, v15
0x0318: v_mul_f32 v14, s3, v16
0x031c: v_mul_f32 v13, s3, v13
0x0320: v_mul_f32 v12, s3, v12
0x0324: v_mad_f32 v14, -v14, v7, v11
0x032c: v_mad_f32 v13, -v13, v7, v10
0x0334: v_mad_f32 v7, -v12, v7, v2
0x033c: v_mac_f32 v11, v14, v6
0x0340: v_mac_f32 v10, v13, v6
0x0344: v_mac_f32 v2, v7, v6
0x0348: s_mov_b64 exec, s[6:7]
0x034c: v_sub_f32 v6, 1.f, v5
0x0350: v_mad_f32 v3, v3, v6, v5
0x0358: v_mad_f32 v2, v2, v6, v4
0x0360: v_mad_f32 v10, v10, v6, v1
0x0368: v_mad_f32 v11, v11, v6, v0
0x0370: s_mov_b64 exec, s[4:5]
0x0374: unknown_1 s13, 0x8402
0x0378: s_cbranch_scc0 0x1c
0x037c: s_load_dwordx8 s[4:11], s[0:1], 0x3a
0x0380: s_waitcnt 0x7f
0x0384: image_load v[4:7], v[8:9], s[4:11], s[0:3], dmask(rgba)
0x038c: s_waitcnt 0xf70
0x0390: v_add_f32 v0, 1.f, -abs(v4), s0
0x0398: v_max_f32 v0, 0x38d1b717, v0
0x03a0: v_rcp_f32 v0, v0
0x03a4: v_mul_f32 v12, v6, v0
0x03a8: v_mad_f32 v14, -v4, v0, v12
0x03b0: v_mad_f32 v12, -v5, v0, -v12
0x03b8: v_mul_f32 v1, v4, v0
0x03bc: v_sub_f32 v13, 1.f, v7
0x03c0: v_mac_f32 v14, v0, v5
0x03c4: v_mac_f32 v12, v0, v4
0x03c8: v_mac_f32 v1, v0, v6
0x03cc: v_mad_f32 v11, v11, v13, v14
0x03d4: v_mad_f32 v2, v2, v13, v12
0x03dc: v_mad_f32 v10, v10, v13, v1
0x03e4: v_mad_f32 v3, v3, v13, v7
0x03ec: v_cvt_f32_u32 v12, v9
0x03f0: s_load_dword s3, s[0:1], 0x70
0x03f4: s_waitcnt 0x7f
0x03f8: v_cmp_gt_f32 v106, s3, 0, s0
0x0400: s_cbranch_vccz 0x1d
0x0404: v_mov_b32 v0, 0xbe83126f
0x040c: s_load_dword s4, s[0:1], 0x21
0x0410: v_mov_b32 v1, s3
0x0414: s_waitcnt 0x7f
0x0418: v_rcp_f32 v4, s4
0x041c: v_madak_f32 v0, v0, v1
0x0424: s_mov_b32 vcc_lo, 0xbe83126f
0x042c: v_mul_f32 v4, v12, v4
0x0430: v_mad_f32 v1, -vcc_lo, v1, v0
0x0438: v_mad_f32 v4, 2.f, v4, -1.f
0x0440: v_add_f32 v1, 1.f, v1
0x0444: v_add_f32 v0, v4, -v0, abs(s0)
0x044c: v_rcp_f32 v1, v1
0x0450: v_mul_f32 v1, v1, v0, s0, clamp
0x0458: v_madak_f32 v0, -2.f, v1
0x0460: v_mul_f32 v1, v1, v1
0x0464: v_mul_f32 v0, v1, v0
0x0468: v_mul_f32 v11, v11, v0
0x046c: v_mul_f32 v10, v10, v0
0x0470: v_mul_f32 v2, v2, v0
0x0474: v_mul_f32 v3, v3, v0
0x0478: unknown_1 s13, 0x8702
0x047c: s_cbranch_scc0 0xa5
0x0480: v_lshrrev_b32 v7, 3, v8
0x0484: v_lshrrev_b32 v5, 4, v8
0x0488: v_xor_b32 v1, v5, v7
0x048c: v_lshrrev_b32 v6, 3, v9
0x0490: v_lshrrev_b32 v0, 4, v9
0x0494: v_xor_b32 v4, v1, v6
0x0498: v_xor_b32 v13, v5, v0
0x049c: v_lshrrev_b32 v1, 5, v8
0x04a0: v_lshrrev_b32 v0, 5, v9
0x04a4: v_and_b32 v4, 1, v4
0x04a8: v_and_b32 v13, 1, v13
0x04ac: v_xor_b32 v1, v1, v0
0x04b0: v_mad_u32_u24 v4, v13, 2, v4
0x04b8: v_and_b32 v1, 1, v1
0x04bc: s_and_b32 s3, 0x100, s2
0x04c4: v_mad_u32_u24 v4, v1, 4, v4
0x04cc: s_cbranch_scc0 0x5
0x04d0: v_lshrrev_b32 v1, 6, v8
0x04d4: v_xor_b32 v0, v1, v0
0x04d8: v_and_b32 v0, 1, v0
0x04dc: v_mad_u32_u24 v4, v0, 8, v4
0x04e4: unknown_1 s1, 0x8003
0x04e8: s_cselect_b32 s6, 64, 32
0x04ec: v_cvt_f32_u32 v0, s6
0x04f0: v_rcp_iflag_f32 v0, v0
0x04f4: v_mul_f32 v0, 0x4f800000, v0
0x04fc: v_cvt_u32_f32 v13, v0
0x0500: v_mad_u64_u32 v[0:1], s6, abs(v13), 0, clamp
0x0508: v_cmp_lg_u32 v4, 0, v1, s0
0x0510: v_sub_co_u32 v1, 0, v0
0x0514: v_cndmask_b32 v0, v1, v0, vcc
0x051c: v_mul_hi_u32 v1, v0, v13, s0
0x0524: v_sub_co_u32 v0, v13, v1
0x0528: v_add_co_u32 v1, v13, v1
0x052c: v_cndmask_b32 v0, v1, v0, vcc
0x0534: v_mul_hi_u32 v14, v0, v6, s0
0x053c: v_mul_lo_i32 v0, s6, v14, s0
0x0544: v_sub_co_u32 v1, v6, v0
0x0548: v_cmp_le_u32 s6, v1
0x054c: v_cmp_ge_u32 v4, v6, v0, s0
0x0554: v_bfe_u32 v13, v7, 2, 4
0x055c: v_xor_b32 v0, v5, v6
0x0560: v_and_b32 v1, 1, v0
0x0564: v_lshrrev_b32 v0, 9, v8
0x0568: s_and_b64 vcc, s[4:5], vcc
0x056c: v_addc_co_u32 v7, 0, v14
0x0570: v_addc_co_u32 v7, -1, abs(v7), vcc, clamp
0x0578: v_mul_lo_i32 v14, s6, v7, s0
0x0580: v_sub_co_u32 v6, v6, v14
0x0584: v_lshrrev_b32 v6, 2, v6
0x0588: v_lshlrev_b32 v6, 4, v6
0x058c: v_sad_u32 v6, v13, 0, v6
0x0594: v_and_b32 v5, 1, v5
0x0598: unknown_1 s0, 0x8003
0x059c: s_load_dword s4, s[0:1], 0x66
0x05a0: s_cselect_b32 vcc_hi, 1, 0
0x05a4: v_lshlrev_b32 v6, vcc_hi, v6
0x05a8: s_waitcnt 0x7f
0x05ac: s_add_i32 vcc_lo, 63, s4
0x05b0: v_and_b32 v6, -4, v6
0x05b4: s_lshr_b32 vcc_lo, vcc_lo, 6
0x05b8: v_or_b32 v1, v6, v1
0x05bc: v_mul_lo_i32 v6, vcc_lo, v7, s0
0x05c4: v_sad_u32 v0, v0, 0, v6
0x05cc: v_mad_u32_u24 v1, v5, 2, v1
0x05d4: v_lshlrev_b32 v0, 8, v0
0x05d8: v_sad_u32 v0, v0, 0, v1
0x05e0: unknown_1 s1, 0x8003
0x05e4: v_lshrrev_b32 v1, 9, v0
0x05e8: s_cselect_b32 vcc_lo, 4, 3
0x05ec: v_lshlrev_b32 v1, vcc_lo, v1
0x05f0: v_sad_u32 v1, v4, 0, v1
0x05f8: v_lshlrev_b32 v1, 8, v1
0x05fc: v_bfe_u32 v4, v0, 1, 8
0x0604: v_sad_u32 v1, v4, 0, v1
0x060c: s_load_dwordx4 s[8:11], s[0:1], 0x52
0x0610: v_and_b32 v1, 0x7fffffff, v1
0x0618: s_waitcnt 0x7f
0x061c: buffer_load_format_x v1, v1, s[8:11], idxen, offset=0x0, soffset=0x80
0x0624: v_and_b32 v4, 1, v0
0x0628: v_bfe_u32 v5, v8, 2, 1
0x0630: v_lshrrev_b32 v0, 1, v9
0x0634: v_mad_u32_u24 v4, v4, 4, v5
0x063c: v_and_b32 v0, 2, v0
0x0640: v_or_b32 v0, v4, v0
0x0644: s_waitcnt 0xf70
0x0648: v_lshr_b32 v0, v1, v0
0x064c: v_and_b32 v0, 1, v0
0x0650: v_cmp_lg_u32 0, v0
0x0654: s_and_saveexec_b64 s[14:15], vcc
0x0658: s_cbranch_execz 0x2d
0x065c: s_load_dwordx8 s[4:11], s[0:1], 0x4a
0x0660: s_waitcnt 0x7f
0x0664: image_load v[4:7], v[8:9], s[4:11], s[0:3], dmask(rgba)
0x066c: s_waitcnt 0xf70
0x0670: v_cmp_lt_f32 0, v7
0x0674: s_and_saveexec_b64 vcc, vcc
0x0678: s_cbranch_execz 0x20
0x067c: v_mul_f32 v0, 0x3e59b3d0, v11
0x0684: v_madmk_f32 v0, v10, v0
0x068c: v_madmk_f32 v0, v2, v0
0x0694: v_add_f32 v0, 2.f, abs(v0), s0
0x069c: v_rcp_f32 v13, v0
0x06a0: v_mul_f32 v1, v11, v13
0x06a4: v_sub_f32 v0, 1.f, v7
0x06a8: v_mul_f32 v1, v1, v0
0x06ac: v_mul_f32 v10, v10, v13
0x06b0: v_mul_f32 v11, 0x3e59b3d0, v1
0x06b8: v_mul_f32 v10, v10, v0
0x06bc: v_mul_f32 v2, v2, v13
0x06c0: v_madmk_f32 v11, v10, v11
0x06c8: v_mul_f32 v2, v2, v0
0x06cc: v_madmk_f32 v11, v2, v11
0x06d4: v_add_f32 v11, 1.f, -abs(v11), s0
0x06dc: v_max_f32 v11, 0x38d1b717, v11
0x06e4: v_rcp_f32 v13, v11, s0, s0, mul:2
0x06ec: v_mul_f32 v11, v1, v13
0x06f0: v_mul_f32 v10, v10, v13
0x06f4: v_mul_f32 v2, v2, v13
0x06f8: v_mul_f32 v3, v3, v0
0x06fc: s_mov_b64 exec, vcc
0x0700: v_add_f32 v3, v7, v3
0x0704: v_add_f32 v2, v2, v6
0x0708: v_add_f32 v10, v10, v5
0x070c: v_add_f32 v11, v4, v11
0x0710: s_mov_b64 exec, s[14:15]
0x0714: v_cvt_f32_u32 v4, v8
0x0718: s_load_dword s3, s[0:1], 0x71
0x071c: s_waitcnt 0x7f
0x0720: unknown_1 s1, 0x380
0x0724: s_cbranch_scc0 0x95
0x0728: v_add_f32 v1, 0.5.f, v4
0x072c: s_load_dwordx2 s[4:5], s[0:1], 0x1e
0x0730: v_add_f32 v0, 0.5.f, v12
0x0734: unknown_1 s1, 0x383
0x0738: s_waitcnt 0x7f
0x073c: v_mul_f32 v5, s4, v1
0x0740: v_mul_f32 v0, s5, v0
0x0744: s_cselect_b64 vcc, exec, 0
0x0748: unknown_1 s1, 0x382
0x074c: s_cselect_b64 s[8:9], exec, 0
0x0750: unknown_1 s1, 0x381
0x0754: s_cselect_b64 s[6:7], exec, 0
0x0758: unknown_1 s1, 0x384
0x075c: s_cbranch_scc0 0x5c
0x0760: s_and_b64 vcc, exec, vcc
0x0764: s_cbranch_vccz 0x37
0x0768: s_and_b64 vcc, exec, s[8:9]
0x076c: s_cbranch_vccz 0x1d
0x0770: v_mov_b32 v1, 0
0x0774: s_and_b64 vcc, exec, s[6:7]
0x0778: s_cbranch_vccnz 0x19
0x077c: v_add_f32 v1, -0.5.f, v5
0x0780: s_load_dwordx2 s[4:5], s[0:1], 0x20
0x0784: v_add_f32 v0, -0.5.f, v0
0x0788: s_waitcnt 0x7f
0x078c: v_rcp_f32 v5, s5
0x0790: v_mul_f32 v5, s4, v5
0x0794: s_mov_b32 vcc_hi, 0xbe978d50
0x079c: s_mov_b32 vcc_lo, 0xbe2b020c
0x07a4: v_mad_f32 v1, v5, abs(v1), abs(vcc_hi)
0x07ac: v_add_f32 v0, vcc_lo, abs(v0), s0
0x07b4: v_min_f32 v0, v1, abs(v0), abs(s0)
0x07bc: v_mul_f32 v0, s4, v0
0x07c0: s_mov_b32 vcc_lo, 0xbe000000
0x07c8: v_mad_f32 v1, vcc_lo, v0, 0.5.f, clamp
0x07d0: v_madak_f32 v0, -2.f, v1
0x07d8: v_mul_f32 v1, v1, v1
0x07dc: v_mul_f32 v1, v1, v0
0x07e0: s_branch 0x5d
0x07e4: v_add_f32 v1, -0.5.f, v5
0x07e8: s_load_dwordx2 s[4:5], s[0:1], 0x20
0x07ec: v_add_f32 v0, -0.5.f, v0
0x07f0: s_waitcnt 0x7f
0x07f4: v_rcp_f32 v5, s5
0x07f8: v_mul_f32 v5, s4, v5
0x07fc: v_mul_f32 v1, v5, v1
0x0800: v_mul_f32 v1, v1, v1
0x0804: v_mac_f32 v1, v0, v0
0x0808: v_sqrt_f32 v0, v1
0x080c: s_mov_b32 vcc_lo, 0x3ee66666
0x0814: v_sub_f32 v0, vcc_lo, v0
0x0818: v_mul_f32 v0, s4, abs(v0), s0
0x0820: s_mov_b32 vcc_hi, 0xbe333333
0x0828: v_mad_f32 v1, vcc_hi, v0, 0.5.f, clamp
0x0830: v_madak_f32 v0, -2.f, v1
0x0838: v_mul_f32 v1, v1, v1
0x083c: v_mul_f32 v1, v1, v0
0x0840: s_branch 0x45
0x0844: v_add_f32 v1, -0.5.f, v5
0x0848: s_load_dwordx2 s[4:5], s[0:1], 0x20
0x084c: s_mov_b32 vcc_lo, 0x3ef0a3d7
0x0854: s_waitcnt 0x7f
0x0858: v_rcp_f32 v5, s5
0x085c: v_mul_f32 v5, s4, v5
0x0860: v_mul_f32 v5, v5, v1
0x0864: v_cmp_ngt_f32 v106, v5, vcc_lo, abs(s0)
0x086c: v_mov_b32 v1, 0
0x0870: s_and_saveexec_b64 vcc, vcc
0x0874: s_cbranch_execz 0x14
0x0878: v_add_f32 v0, -0.5.f, v0
0x087c: s_mov_b32 s3, 0xc0882b93
0x0884: v_mad_f32 v1, s3, abs(v5), 2.f
0x088c: v_min_f32 v1, 1.f, v1
0x0890: s_mov_b32 s3, 0x3ed064ed
0x0898: v_mad_f32 v0, -abs(s3), v1, v0
0x08a0: v_mul_f32 v0, s4, abs(v0), s0
0x08a8: s_mov_b32 s3, 0xbe000000
0x08b0: v_mad_f32 v1, s3, v0, 0.5.f, clamp
0x08b8: v_madak_f32 v0, -2.f, v1
0x08c0: v_mul_f32 v1, v1, v1
0x08c4: v_mul_f32 v1, v1, v0
0x08c8: s_mov_b64 exec, vcc
0x08cc: s_branch 0x22
0x08d0: v_add_f32 v1, -0.5.f, v5
0x08d4: s_load_dwordx2 s[4:5], s[0:1], 0x20
0x08d8: v_add_f32 v0, -0.5.f, v0
0x08dc: s_waitcnt 0x7f
0x08e0: v_rcp_f32 v5, s5
0x08e4: v_mul_f32 v5, s4, v5
0x08e8: s_mov_b32 vcc_hi, 0xbeb5c28f
0x08f0: s_mov_b32 vcc_lo, 0xbef5c28f
0x08f8: v_mad_f32 v1, v5, abs(v1), abs(vcc_hi)
0x0900: v_add_f32 v5, vcc_lo, abs(v0), s0
0x0908: v_min_f32 v0, v1, abs(v5), abs(s0)
0x0910: v_max_f32 v1, v1, v5
0x0914: v_mul_f32 v0, s4, v0
0x0918: v_mul_f32 v5, s4, v1
0x091c: s_mov_b32 vcc_lo, 0xbe000000
0x0924: v_mad_f32 v1, vcc_lo, v0, 0.5.f, clamp
0x092c: v_mad_f32 v5, vcc_lo, v5, 0.5.f, clamp
0x0934: v_madak_f32 v0, -2.f, v1
0x093c: v_mul_f32 v6, v1, v1
0x0940: v_madak_f32 v1, -2.f, v5
0x0948: v_mul_f32 v5, v5, v5
0x094c: v_mul_f32 v0, v6, v0
0x0950: v_mul_f32 v1, v5, v1
0x0954: v_min_f32 v1, v0, v1
0x0958: v_add_f32 v0, v1, v11
0x095c: v_add_f32 v5, v1, v10
0x0960: v_add_f32 v6, v1, v2
0x0964: v_mad_f32 v11, v1, -v11, v0
0x096c: v_mad_f32 v10, v1, -v10, v5
0x0974: v_mad_f32 v2, v1, -v2, v6
0x097c: s_load_dwordx2 s[4:5], s[0:1], 0x72
0x0980: s_waitcnt 0x7f
0x0984: s_sub_i32 vcc_hi, 0, s5
0x0988: s_add_i32 vcc_lo, s5, s13
0x098c: v_cmp_gt_i32 v8, vcc_hi, v9, s0
0x0994: v_cmp_lt_i32 vcc_lo, v9
0x0998: v_cmp_gt_i32 v6, s5, v8, s0
0x09a0: v_mul_f32 v0, s4, v11
0x09a4: v_mul_f32 v1, s4, v10
0x09a8: v_mul_f32 v2, s4, v2
0x09ac: v_mul_f32 v3, s4, v3
0x09b0: s_or_b64 vcc, s[8:9], vcc
0x09b4: unknown_1 s4, 0x8005
0x09b8: v_cndmask_b32 v5, 0, 1, vcc
0x09c0: s_cselect_b32 s3, 1, 0
0x09c4: s_sub_i32 vcc_lo, s12, s5
0x09c8: v_cmp_lt_i32 vcc_lo, v8
0x09cc: v_and_b32 v5, s3, v5
0x09d0: s_or_b64 vcc, s[6:7], vcc
0x09d4: unknown_1 s2, 0x8005
0x09d8: v_cndmask_b32 v6, 0, 1, vcc
0x09e0: s_cselect_b32 vcc_lo, 1, 0
0x09e4: v_and_b32 v6, vcc_lo, v6
0x09e8: v_or_b32 v5, v6, v5
0x09ec: v_cmp_lg_u32 0, v5
0x09f0: s_and_saveexec_b64 vcc, vcc
0x09f4: s_cbranch_execz 0x6
0x09f8: s_load_dword s3, s[0:1], 0x74
0x09fc: s_waitcnt 0x7f
0x0a00: v_mul_f32 v0, s3, v0
0x0a04: v_mul_f32 v1, s3, v1
0x0a08: v_mul_f32 v2, s3, v2
0x0a0c: v_mul_f32 v3, s3, v3
0x0a10: s_load_dwordx4 s[4:7], s[0:1], 0x18
0x0a14: s_mov_b64 exec, vcc
0x0a18: s_waitcnt 0x7f
0x0a1c: v_cmp_gt_f32 v106, s7, 0, s0
0x0a24: s_cbranch_vccz 0x43
0x0a28: s_mov_b32 vcc_lo, 0x186a0
0x0a30: v_mul_lo_i32 v5, vcc_lo, v9, s0
0x0a38: v_add_co_u32 v5, v8, v5
0x0a3c: v_lshrrev_b32 v6, 16, v5
0x0a40: v_xor_b32 v6, 61, v6
0x0a44: v_xor_b32 v5, v6, v5
0x0a48: v_mul_lo_i32 v5, 9, v5, s0
0x0a50: s_load_dwordx2 s[8:9], s[0:1], 0x20
0x0a54: v_lshrrev_b32 v6, 4, v5
0x0a58: v_xor_b32 v5, v6, v5
0x0a5c: s_waitcnt 0x7f
0x0a60: v_rcp_f32 v6, s8
0x0a64: v_mul_f32 v4, v4, v6, s0, div:2
0x0a6c: v_fract_f32 v4, v4
0x0a70: v_sin_f32 v6, v4
0x0a74: s_mov_b32 vcc_lo, 0x27d4eb2d
0x0a7c: v_mul_lo_i32 v4, vcc_lo, v5, s0
0x0a84: v_mul_f32 v6, v6, v6
0x0a88: v_lshrrev_b32 v5, 15, v4
0x0a8c: v_mul_f32 v6, s9, v6
0x0a90: v_xor_b32 v4, v5, v4
0x0a94: v_madmk_f32 v6, v6, v12
0x0a9c: v_rcp_f32 v7, s9
0x0aa0: v_subrev_f32 v5, s4, v0
0x0aa4: v_and_b32 v4, 0xffffff, v4
0x0aac: v_mul_f32 v6, v7, v6
0x0ab0: v_mul_f32 v5, v5, v5
0x0ab4: v_subrev_f32 v7, s5, v1
0x0ab8: v_cvt_f32_u32 v4, v4
0x0abc: v_mul_f32 v6, 0x3ee66666, v6
0x0ac4: v_mad_f32 v10, v7, v7, v5
0x0acc: v_subrev_f32 v7, s6, v2
0x0ad0: v_madmk_f32 v4, v4, v6
0x0ad8: v_mac_f32 v10, v7, v7
0x0adc: v_med3_f32 v5, 1.f, v4, 0, clamp
0x0ae4: v_sqrt_f32 v6, v10
0x0ae8: v_mov_b32 v7, 0x3c23d70a
0x0af0: v_madak_f32 v4, -2.f, v5
0x0af8: v_mul_f32 v5, v5, v5, -s0
0x0b00: v_madak_f32 v6, v7, v6
0x0b08: v_mul_f32 v4, v5, v4
0x0b0c: v_min_f32 v5, 1.f, v6
0x0b10: v_mac_f32 v5, v5, v4
0x0b14: v_mul_f32 v4, s7, v5, s0, clamp
0x0b1c: v_sub_f32 v5, s4, v0
0x0b20: v_sub_f32 v6, s5, v1
0x0b24: v_sub_f32 v7, s6, v2
0x0b28: v_mac_f32 v0, v5, v4
0x0b2c: v_mac_f32 v1, v6, v4
0x0b30: v_mac_f32 v2, v7, v4
0x0b34: unknown_1 s13, 0x8602
0x0b38: s_cbranch_scc0 0x45
0x0b3c: v_mul_f32 v4, v0, v0
0x0b40: s_load_dwordx8 s[4:11], s[0:1], 0x22
0x0b44: v_mad_f32 v5, v1, v1, v4
0x0b4c: s_waitcnt 0x7f
0x0b50: image_load v7, v[8:9], s[4:11], s[0:3], dmask(a)
0x0b58: v_mac_f32 v5, v2, v2
0x0b5c: v_sqrt_f32 v4, v5
0x0b60: v_cmp_lt_f32 2.f, v4
0x0b64: s_and_saveexec_b64 vcc, vcc
0x0b68: s_cbranch_execz 0x14
0x0b6c: s_waitcnt 0xf70
0x0b70: v_max_f32 v4, 0, v7, s0, clamp
0x0b78: v_rsq_f32 v5, v5
0x0b7c: v_madak_f32 v6, -2.f, v4
0x0b84: v_mul_f32 v11, v4, v4
0x0b88: v_mul_f32 v10, v5, v0
0x0b8c: v_mul_f32 v4, v5, v1
0x0b90: v_mul_f32 v5, v5, v2
0x0b94: v_mul_f32 v6, v11, v6
0x0b98: v_mad_f32 v10, -2.f, v10, v0
0x0ba0: v_mad_f32 v4, -2.f, v4, v1
0x0ba8: v_mad_f32 v5, -2.f, v5, v2
0x0bb0: v_mac_f32 v0, v10, v6
0x0bb4: v_mac_f32 v1, v4, v6
0x0bb8: v_mac_f32 v2, v5, v6
0x0bbc: s_mov_b64 exec, vcc
0x0bc0: v_mul_f32 v4, 0x3e99999a, v0
0x0bc8: s_load_dwordx8 s[4:11], s[0:1], 0x56
0x0bcc: v_madmk_f32 v4, v1, v4
0x0bd4: v_madmk_f32 v4, v2, v4
0x0bdc: v_max_f32 v11, 1.f, v4
0x0be0: s_waitcnt 0x7f
0x0be4: image_load v[4:6], v[8:9], s[4:11], s[0:3], dmask(rgb)
0x0bec: s_waitcnt 0xf71
0x0bf0: v_sub_f32 v10, 1.f, v7
0x0bf4: v_mad_f32 v3, v3, v10, v7
0x0bfc: s_waitcnt 0xf70
0x0c00: v_mul_f32 v7, 0x3e99999a, v4
0x0c08: v_madmk_f32 v7, v5, v7
0x0c10: v_madmk_f32 v7, v6, v7
0x0c18: v_mad_f32 v7, 4.f, v7, v11
0x0c20: v_max_f32 v7, 1.f, v7
0x0c24: v_rcp_f32 v7, v7
0x0c28: v_mul_f32 v7, v7, v11
0x0c2c: v_mul_f32 v0, v0, v7
0x0c30: v_mul_f32 v1, v1, v7
0x0c34: v_mul_f32 v2, v2, v7
0x0c38: v_mad_f32 v0, v0, v10, v4
0x0c40: v_mad_f32 v1, v1, v10, v5
0x0c48: v_mad_f32 v2, v2, v10, v6
0x0c50: unknown_1 s13, 0x8202
0x0c54: s_cbranch_scc0 0x1c
0x0c58: s_load_dwordx8 s[4:11], s[0:1], 0x42
0x0c5c: s_waitcnt 0x7f
0x0c60: image_load v[4:7], v[8:9], s[4:11], s[0:3], dmask(rgba)
0x0c68: s_waitcnt 0xf70
0x0c6c: v_add_f32 v10, 1.f, -abs(v4), s0
0x0c74: v_max_f32 v10, 0x38d1b717, v10
0x0c7c: v_rcp_f32 v10, v10
0x0c80: v_mul_f32 v12, v6, v10
0x0c84: v_mad_f32 v14, -v4, v10, v12
0x0c8c: v_mad_f32 v12, -v5, v10, -v12
0x0c94: v_mul_f32 v11, v4, v10
0x0c98: v_sub_f32 v13, 1.f, v7
0x0c9c: v_mac_f32 v14, v10, v5
0x0ca0: v_mac_f32 v12, v10, v4
0x0ca4: v_mac_f32 v11, v10, v6
0x0ca8: v_mad_f32 v0, v0, v13, v14
0x0cb0: v_mad_f32 v2, v2, v13, v12
0x0cb8: v_mad_f32 v1, v1, v13, v11
0x0cc0: v_mad_f32 v3, v3, v13, v7
0x0cc8: s_load_dwordx8 s[0:7], s[0:1], 0x56
0x0ccc: s_waitcnt 0x7f
0x0cd0: image_store v[0:3], v[8:9], s[0:7], s[0:3], dmask(rgba)
0x0cd8: s_endpgm 0x0