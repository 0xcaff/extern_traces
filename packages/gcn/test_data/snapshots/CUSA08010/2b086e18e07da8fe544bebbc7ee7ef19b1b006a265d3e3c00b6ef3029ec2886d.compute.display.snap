0x0000: s_mov_b32 vcc_hi, 0x55
0x0008: s_lshl_b32 vcc_lo, s2, 3
0x000c: v_sad_u32 v20, vcc_lo, 0, v0
0x0014: s_lshl_b32 vcc_lo, s3, 3
0x0018: v_sad_u32 v21, vcc_lo, 0, v1
0x0020: s_load_dwordx16 s[0:15], s[0:1], 0x0
0x0024: v_add_co_u32 v4, -1, v20
0x0028: v_add_co_u32 v5, -1, v21
0x002c: v_mov_b32 v0, v4
0x0030: v_mov_b32 v1, v21
0x0034: v_bcnt_u32_b32 v24, 1, v21
0x0038: v_mov_b32 v23, v4
0x003c: s_waitcnt 0x7f
0x0040: image_load v[12:15], v[4:5], s[8:15], s[0:3], dmask(rgba)
0x0048: image_load v[16:19], v[20:21], s[8:15], s[0:3], dmask(rgba)
0x0050: image_load v[0:3], v[0:1], s[8:15], s[0:3], dmask(rgba)
0x0058: image_load v[8:11], v[23:24], s[8:15], s[0:3], dmask(rgba)
0x0060: v_mov_b32 v25, v20
0x0064: v_mov_b32 v26, v5
0x0068: v_bcnt_u32_b32 v22, 1, v20
0x006c: v_mov_b32 v23, v5
0x0070: image_load v[4:7], v[25:26], s[8:15], s[0:3], dmask(rgba)
0x0078: s_waitcnt 0xf74
0x007c: v_cmp_class_f32 v106, v15, 60, s0
0x0084: s_waitcnt 0xf73
0x0088: v_cmp_class_f32 v16, v19, 60, s0
0x0090: v_mad_f32 v26, 0.5.f, abs(v15), -1.f, clamp
0x0098: s_xor_b64 vcc, vcc, s[16:17]
0x009c: v_cndmask_b32 v26, v26, 0, vcc
0x00a4: s_waitcnt 0xf72
0x00a8: v_cmp_class_f32 v106, v3, 60, s0
0x00b0: v_mad_f32 v14, v14, v26, v18
0x00b8: v_mac_f32 v16, v26, v12
0x00bc: v_mad_f32 v12, 0.5.f, abs(v3), -1.f, clamp
0x00c4: v_mac_f32 v17, v26, v13
0x00c8: s_xor_b64 vcc, vcc, s[16:17]
0x00cc: v_cndmask_b32 v18, v12, 0, vcc
0x00d4: s_waitcnt 0xf71
0x00d8: v_cmp_class_f32 v106, v11, 60, s0
0x00e0: v_mad_f32 v13, 0.5.f, abs(v11), -1.f, clamp
0x00e8: v_add_f32 v12, v26, v18
0x00ec: v_mac_f32 v14, v18, v2
0x00f0: v_mac_f32 v16, v18, v0
0x00f4: s_xor_b64 vcc, vcc, s[16:17]
0x00f8: v_cndmask_b32 v13, v13, 0, vcc
0x0100: s_waitcnt 0xf70
0x0104: v_cmp_class_f32 v106, v7, 60, s0
0x010c: v_mac_f32 v19, v26, v15
0x0110: v_mov_b32 v26, v24
0x0114: v_mac_f32 v17, v18, v1
0x0118: v_mac_f32 v19, v18, v3
0x011c: s_xor_b64 vcc, vcc, s[16:17]
0x0120: v_mac_f32 v17, v13, v9
0x0124: v_mad_f32 v18, v8, v13, v16
0x012c: v_add_f32 v16, v12, v13
0x0130: v_mad_f32 v27, v10, v13, v14
0x0138: v_mac_f32 v19, v13, v11
0x013c: image_load v[12:15], v[25:26], s[8:15], s[0:3], dmask(rgba)
0x0144: image_load v[0:3], v[22:23], s[8:15], s[0:3], dmask(rgba)
0x014c: v_mov_b32 v23, v21
0x0150: image_load v[8:11], v[22:23], s[8:15], s[0:3], dmask(rgba)
0x0158: v_mov_b32 v23, v24
0x015c: v_mad_f32 v24, 0.5.f, abs(v7), -1.f, clamp
0x0164: v_cndmask_b32 v25, v24, 0, vcc
0x016c: v_mad_f32 v24, v7, v25, v19
0x0174: v_mad_f32 v26, v5, v25, v17
0x017c: v_mac_f32 v18, v25, v4
0x0180: v_mac_f32 v27, v25, v6
0x0184: image_load v[4:7], v[22:23], s[8:15], s[0:3], dmask(rgba)
0x018c: v_add_f32 v23, v16, v25
0x0190: s_waitcnt 0xf73
0x0194: v_cmp_class_f32 v106, v15, 60, s0
0x019c: v_mad_f32 v16, 0.5.f, abs(v15), -1.f, clamp
0x01a4: s_waitcnt 0xf72
0x01a8: v_mad_f32 v22, 0.5.f, abs(v3), -1.f, clamp
0x01b0: s_waitcnt 0xf71
0x01b4: v_mad_f32 v17, 0.5.f, abs(v11), -1.f, clamp
0x01bc: s_xor_b64 vcc, vcc, s[16:17]
0x01c0: v_cndmask_b32 v16, v16, 0, vcc
0x01c8: v_cmp_class_f32 v106, v3, 60, s0
0x01d0: v_add_f32 v23, v23, v16
0x01d4: v_mac_f32 v18, v16, v12
0x01d8: v_mac_f32 v24, v16, v15
0x01dc: v_mac_f32 v27, v16, v14
0x01e0: s_xor_b64 vcc, vcc, s[16:17]
0x01e4: v_cndmask_b32 v15, v22, 0, vcc
0x01ec: v_cmp_class_f32 v106, v11, 60, s0
0x01f4: v_add_f32 v19, v23, v15
0x01f8: v_mac_f32 v26, v16, v13
0x01fc: v_mac_f32 v18, v15, v0
0x0200: v_mac_f32 v24, v15, v3
0x0204: s_xor_b64 vcc, vcc, s[16:17]
0x0208: v_cndmask_b32 v0, v17, 0, vcc
0x0210: s_waitcnt 0xf70
0x0214: v_cmp_class_f32 v106, v7, 60, s0
0x021c: v_add_f32 v17, v19, v0
0x0220: v_mac_f32 v27, v15, v2
0x0224: v_mac_f32 v26, v15, v1
0x0228: v_mad_f32 v1, 0.5.f, abs(v7), -1.f, clamp
0x0230: s_xor_b64 vcc, vcc, s[16:17]
0x0234: v_cndmask_b32 v1, v1, 0, vcc
0x023c: v_add_f32 v13, v17, v1
0x0240: v_add_f32 v13, 1.f, v13
0x0244: v_mac_f32 v18, v0, v8
0x0248: v_mac_f32 v24, v0, v11
0x024c: v_mac_f32 v27, v0, v10
0x0250: v_mac_f32 v26, v0, v9
0x0254: v_mac_f32 v18, v1, v4
0x0258: v_rcp_f32 v4, v13
0x025c: v_mac_f32 v24, v1, v7
0x0260: v_mac_f32 v27, v1, v6
0x0264: v_mac_f32 v26, v1, v5
0x0268: v_mul_f32 v0, v4, v18
0x026c: v_mul_f32 v3, v4, v24
0x0270: v_mul_f32 v2, v4, v27
0x0274: v_mul_f32 v1, v4, v26
0x0278: image_store v[0:3], v[20:21], s[0:7], s[0:3], dmask(rgba)
0x0280: s_endpgm 0x0