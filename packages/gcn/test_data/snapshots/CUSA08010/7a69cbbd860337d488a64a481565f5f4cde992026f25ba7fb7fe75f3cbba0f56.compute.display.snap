0x0000: s_mov_b32 vcc_hi, 0xa0
0x0008: v_lshrrev_b32 v1, 1, v0
0x000c: v_and_b32 v1, 21, v1
0x0010: v_and_b32 v0, 21, v0
0x0014: v_lshrrev_b32 v3, 1, v1
0x0018: v_lshrrev_b32 v2, 1, v0
0x001c: v_or_b32 v1, v3, v1
0x0020: v_or_b32 v2, v2, v0
0x0024: v_and_b32 v0, 19, v1
0x0028: v_and_b32 v1, 19, v2
0x002c: v_lshrrev_b32 v3, 2, v0
0x0030: v_lshrrev_b32 v2, 2, v1
0x0034: v_or_b32 v0, v3, v0
0x0038: v_or_b32 v1, v2, v1
0x003c: v_and_b32 v0, 7, v0
0x0040: s_lshl_b32 vcc_hi, s3, 3
0x0044: v_and_b32 v1, 7, v1
0x0048: s_lshl_b32 vcc_lo, s2, 3
0x004c: s_load_dwordx2 s[2:3], s[0:1], 0x16
0x0050: v_or_b32 v9, vcc_hi, v0
0x0054: v_or_b32 v8, vcc_lo, v1
0x0058: s_waitcnt 0x7f
0x005c: v_cmp_gt_u32 vcc, s3, v9, s0
0x0064: v_cmp_gt_u32 s2, v8
0x0068: s_and_b64 vcc, vcc, s[4:5]
0x006c: s_and_saveexec_b64 vcc, vcc
0x0070: s_cbranch_execz 0x107
0x0074: v_cvt_f32_u32 v2, v9
0x0078: s_load_dwordx4 s[4:7], s[0:1], 0x18
0x007c: v_cvt_f32_u32 v0, v8
0x0080: s_waitcnt 0x7f
0x0084: v_mov_b32 v5, s7
0x0088: v_mov_b32 v4, s6
0x008c: s_load_dword s9, s[0:1], 0x1c
0x0090: v_mac_f32 v5, s5, v2
0x0094: v_mac_f32 v4, s4, v0
0x0098: v_mov_b32 v0, 0x3f100000
0x00a0: v_madak_f32 v6, v0, v5
0x00a8: v_add_f32 v7, -0.5.f, v4
0x00ac: s_mov_b32 s10, 1
0x00b0: v_mov_b32 v10, 1.f
0x00b4: v_mov_b32 v14, 0
0x00b8: v_mov_b32 v13, 0
0x00bc: v_mov_b32 v12, 0
0x00c0: v_mov_b32 v11, 0
0x00c4: s_waitcnt 0x7f
0x00c8: unknown_1 s10, 0x90a
0x00cc: s_cbranch_scc0 0x75
0x00d0: v_mov_b32 v0, 0
0x00d4: s_load_dwordx2 s[2:3], s[0:1], 0x10
0x00d8: s_mul_i32 s4, s10, 40
0x00dc: s_waitcnt 0x7f
0x00e0: s_load_dword s8, s[2:3], 0x4
0x00e4: s_waitcnt 0x7f
0x00e8: unknown_1 s0, 0x886
0x00ec: s_cselect_b64 s[4:5], exec, 0
0x00f0: unknown_1 s11, 0x8108
0x00f4: s_cselect_b64 vcc, exec, 0
0x00f8: s_or_b64 vcc, vcc, s[4:5]
0x00fc: unknown_1 s1, 0x887
0x0100: s_cbranch_scc0 0x46
0x0104: v_mov_b32 v0, 0
0x0108: s_and_b64 vcc, exec, vcc
0x010c: s_cbranch_vccnz 0x36
0x0110: s_mul_i32 vcc_lo, s10, 40
0x0114: s_add_i32 s4, vcc_lo, 24
0x0118: s_load_dwordx2 s[4:5], s[2:3], 0x4
0x011c: unknown_1 s1, 0x882
0x0120: s_waitcnt 0x7f
0x0124: v_mul_f32 v0, s4, v7
0x0128: v_mac_f32 v0, s5, v6
0x012c: s_cbranch_scc0 0x2e
0x0130: v_subrev_f32 v1, s4, v7
0x0134: unknown_1 s1, 0x885
0x0138: v_mov_b32 v2, v1, s0, abs(s0)
0x0140: v_subrev_f32 v0, s5, v6
0x0144: s_cselect_b64 vcc, exec, 0
0x0148: unknown_1 s1, 0x884
0x014c: s_cbranch_scc0 0x12
0x0150: s_and_b64 vcc, exec, vcc
0x0154: s_cbranch_vccnz 0xc
0x0158: s_mov_b32 vcc_lo, 0x3f99999a
0x0160: v_mad_f32 v0, abs(vcc_lo), v0, v1
0x0168: s_mov_b32 vcc_lo, 0x3f73cf3e
0x0170: v_mac_f32 v0, v1, abs(v1), -abs(s0)
0x0178: v_mul_f32 v0, 0x3f73cf3e, v0
0x0180: v_mul_f32 v2, vcc_lo, abs(v1), s0
0x0188: v_mul_f32 v1, v2, v2
0x018c: v_mac_f32 v1, v0, v0
0x0190: v_sqrt_f32 v0, v1
0x0194: s_branch 0x14
0x0198: v_mul_f32 v2, 0x3f4f1b48, v0
0x01a0: s_mov_b32 vcc_lo, 0x3f737803
0x01a8: v_mul_f32 v3, vcc_lo, abs(v1), s0
0x01b0: s_mov_b32 vcc_lo, 0xbf1678c0
0x01b8: s_mov_b32 vcc_hi, 0x3f1678c0
0x01c0: v_madmk_f32 v3, v0, v3
0x01c8: v_mad_f32 v15, vcc_lo, abs(v1), v2
0x01d0: v_mad_f32 v1, vcc_hi, abs(v1), v2
0x01d8: v_max_f32 v2, v3, v15
0x01dc: v_max_f32 v0, v0, v1, -s0
0x01e4: v_min_f32 v0, v2, v0
0x01e8: s_mul_i32 vcc_lo, s10, 40
0x01ec: s_add_i32 s4, vcc_lo, 16
0x01f0: s_add_i32 s5, vcc_lo, 20
0x01f4: s_load_dword s5, s[2:3], 0x5
0x01f8: s_load_dword s4, s[2:3], 0x4
0x01fc: s_waitcnt 0x7f
0x0200: v_mov_b32 v1, s5
0x0204: v_mac_f32 v1, s4, v0, s0, clamp
0x020c: v_madak_f32 v0, -2.f, v1
0x0214: v_mul_f32 v1, v1, v1
0x0218: v_mul_f32 v0, v1, v0
0x021c: s_mul_i32 vcc_lo, s10, 40
0x0220: s_add_i32 s4, vcc_lo, 32
0x0224: s_load_dword s4, s[2:3], 0x4
0x0228: s_waitcnt 0x7f
0x022c: v_cmp_gt_f32 vcc, s4, 0, s0
0x0234: s_cbranch_vccz 0xc
0x0238: v_mov_b32 v1, s4
0x023c: s_mov_b32 vcc_lo, 0x40a00000
0x0244: v_mad_f32 v1, vcc_lo, v1, 1.f
0x024c: v_log_f32 v2, v0
0x0250: v_mul_f32 v1, v2, v1
0x0254: v_exp_f32 v1, v1
0x0258: v_sub_f32 v1, 1.f, v1, s0, clamp
0x0260: v_mul_f32 v10, v10, v1
0x0264: s_branch 0x3
0x0268: v_sub_f32 v1, 1.f, v0, s0, clamp
0x0270: v_mul_f32 v10, v10, v1
0x0274: v_add_f32 v14, v14, v0
0x0278: s_mul_i32 vcc_lo, s10, 40
0x027c: s_add_i32 s5, vcc_lo, 4
0x0280: s_add_i32 s4, 8, s5
0x0284: s_load_dword s4, s[2:3], 0x4
0x0288: s_load_dwordx2 s[2:3], s[2:3], 0x5
0x028c: s_add_i32 s10, s10, 1
0x0290: s_waitcnt 0x7f
0x0294: v_mac_f32 v11, s4, v0
0x0298: v_mac_f32 v13, s2, v0
0x029c: v_mac_f32 v12, s3, v0
0x02a0: s_branch -0x78
0x02a4: v_cmp_neq_f32 0, v14
0x02a8: s_load_dwordx8 s[4:11], s[0:1], 0x0
0x02ac: s_waitcnt 0x7f
0x02b0: image_load v[0:3], v[8:9], s[4:11], s[0:3], dmask(rgba)
0x02b8: s_and_saveexec_b64 s[12:13], vcc
0x02bc: s_cbranch_execz 0xd
0x02c0: v_rcp_f32 v14, v14
0x02c4: v_mac_f32 v14, v14, -v10, s0
0x02cc: v_mul_f32 v13, v13, v14
0x02d0: v_mul_f32 v12, v12, v14
0x02d4: v_mul_f32 v11, v11, v14
0x02d8: s_waitcnt 0xf70
0x02dc: v_mad_f32 v0, v0, v10, v13
0x02e4: v_mad_f32 v1, v1, v10, v12
0x02ec: v_mad_f32 v2, v2, v10, v11
0x02f4: s_load_dwordx2 s[2:3], s[0:1], 0x10
0x02f8: s_mov_b64 exec, s[12:13]
0x02fc: s_waitcnt 0x7f
0x0300: s_load_dword s16, s[2:3], 0x0
0x0304: v_mov_b32 v10, 0
0x0308: s_waitcnt 0x7f
0x030c: unknown_1 s0, 0x1086
0x0310: s_cselect_b64 s[14:15], s[12:13], 0
0x0314: unknown_1 s11, 0x8110
0x0318: s_cselect_b64 vcc, s[12:13], 0
0x031c: s_or_b64 vcc, vcc, s[14:15]
0x0320: unknown_1 s1, 0x1082
0x0324: s_cselect_b64 s[12:13], s[12:13], 0
0x0328: unknown_1 s1, 0x1087
0x032c: s_cbranch_scc0 0x43
0x0330: v_mov_b32 v10, 0
0x0334: s_and_b64 vcc, exec, vcc
0x0338: s_cbranch_vccnz 0x37
0x033c: s_and_b64 vcc, exec, s[12:13]
0x0340: s_cbranch_vccz 0x31
0x0344: s_load_dwordx2 s[12:13], s[2:3], 0x6
0x0348: unknown_1 s1, 0x1085
0x034c: s_waitcnt 0x7f
0x0350: v_subrev_f32 v7, s12, v7
0x0354: v_mov_b32 v10, v7, s0, abs(s0)
0x035c: v_subrev_f32 v6, s13, v6
0x0360: s_cselect_b64 vcc, exec, 0
0x0364: unknown_1 s1, 0x1084
0x0368: s_cbranch_scc0 0x12
0x036c: s_and_b64 vcc, exec, vcc
0x0370: s_cbranch_vccnz 0xc
0x0374: s_mov_b32 vcc_lo, 0x3f99999a
0x037c: v_mad_f32 v6, abs(vcc_lo), v6, v7
0x0384: s_mov_b32 vcc_lo, 0x3f73cf3e
0x038c: v_mac_f32 v6, v7, abs(v7), -abs(s0)
0x0394: v_mul_f32 v6, 0x3f73cf3e, v6
0x039c: v_mul_f32 v10, vcc_lo, abs(v7), s0
0x03a4: v_mul_f32 v7, v10, v10
0x03a8: v_mac_f32 v7, v6, v6
0x03ac: v_sqrt_f32 v10, v7
0x03b0: s_branch 0x19
0x03b4: v_mul_f32 v13, 0x3f4f1b48, v6
0x03bc: s_mov_b32 vcc_lo, 0x3f737803
0x03c4: v_mul_f32 v11, vcc_lo, abs(v7), s0
0x03cc: s_mov_b32 vcc_lo, 0xbf1678c0
0x03d4: s_mov_b32 vcc_hi, 0x3f1678c0
0x03dc: v_madmk_f32 v11, v6, v11
0x03e4: v_mad_f32 v12, vcc_lo, abs(v7), v13
0x03ec: v_mac_f32 v13, vcc_hi, abs(v7), s0
0x03f4: v_max_f32 v10, v11, v12
0x03f8: v_max_f32 v6, v6, v13, -s0
0x0400: v_min_f32 v10, v10, v6
0x0404: s_branch 0x4
0x0408: s_load_dwordx2 s[12:13], s[2:3], 0x6
0x040c: s_waitcnt 0x7f
0x0410: v_mul_f32 v10, s12, v7
0x0414: v_mac_f32 v10, s13, v6
0x0418: s_load_dwordx2 s[2:3], s[2:3], 0x4
0x041c: s_waitcnt 0x7f
0x0420: v_mov_b32 v7, s3
0x0424: v_mac_f32 v7, s2, v10, s0, clamp
0x042c: v_madak_f32 v6, -2.f, v7
0x0434: v_mul_f32 v7, v7, v7
0x0438: v_mul_f32 v10, v7, v6
0x043c: v_cmp_lt_f32 0, v10
0x0440: s_and_saveexec_b64 vcc, vcc
0x0444: s_cbranch_execz 0xe
0x0448: s_load_dwordx4 s[20:23], s[0:1], 0x12
0x044c: s_load_dwordx8 s[12:19], s[0:1], 0x8
0x0450: s_waitcnt 0x7f
0x0454: image_sample_lz v[4:7], v[4:5], s[12:19], s[20:23], dmask(rgba)
0x045c: s_waitcnt 0xf70
0x0460: v_sub_f32 v4, v4, v0
0x0464: v_sub_f32 v5, v5, v1
0x0468: v_sub_f32 v6, v6, v2
0x046c: v_sub_f32 v7, v7, v3
0x0470: v_mac_f32 v0, v4, v10
0x0474: v_mac_f32 v1, v5, v10
0x0478: v_mac_f32 v2, v6, v10
0x047c: v_mac_f32 v3, v7, v10
0x0480: s_mov_b64 exec, vcc
0x0484: s_waitcnt 0xf70
0x0488: image_store v[0:3], v[8:9], s[4:11], s[0:3], dmask(rgba)
0x0490: s_endpgm 0x0