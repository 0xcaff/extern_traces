0x0000: s_mov_b32 vcc_hi, 0x2a
0x0008: s_lshl_b32 vcc_lo, s2, 3
0x000c: s_lshl_b32 s5, s3, 3
0x0010: s_load_dwordx2 s[2:3], s[0:1], 0x10
0x0014: v_add_co_u32 v4, vcc_lo, v0
0x0018: v_sad_u32 v5, s5, 0, v1
0x0020: s_waitcnt 0x7f
0x0024: v_cmp_lt_u32 vcc, s3, v5, s0
0x002c: v_cmp_lt_u32 s2, v4
0x0030: s_nor_b64 vcc, vcc, s[6:7]
0x0034: s_and_saveexec_b64 vcc, vcc
0x0038: s_cbranch_execz 0x37
0x003c: v_cvt_f32_u32 v0, v4
0x0040: s_load_dwordx8 s[12:19], s[0:1], 0x12
0x0044: s_load_dword s2, s[0:1], 0x2a
0x0048: s_mov_b32 s8, s0
0x004c: s_waitcnt 0x7f
0x0050: v_mov_b32 v1, s14
0x0054: v_mov_b32 v6, s15
0x0058: v_mac_f32 v1, s12, v0
0x005c: v_cvt_f32_u32 v0, v5
0x0060: v_mad_f32 v2, v1, -s2, abs(1.f)
0x0068: v_mac_f32 v6, s13, v0
0x006c: v_rcp_f32 v3, v2
0x0070: v_mad_f32 v2, v6, -s2, abs(1.f)
0x0078: v_mul_f32 v7, v3, v1
0x007c: v_rcp_f32 v2, v2
0x0080: v_mul_f32 v0, v7, v7
0x0084: v_mul_f32 v8, v2, v6
0x0088: v_mac_f32 v0, v8, v8
0x008c: v_sqrt_f32 v0, v0
0x0090: v_mov_b32 v1, s19
0x0094: v_mac_f32 v1, s18, v0
0x0098: v_cmp_lt_f32 0.5.f, v1
0x009c: v_cndmask_b32 v0, 2, 0, vcc
0x00a4: v_or_b32 v9, s4, v0
0x00a8: v_lshlrev_b32 v0, 4, v9
0x00ac: v_mov_b32 v6, s4
0x00b0: s_mov_b32 s9, s1
0x00b4: s_mov_b32 s10, -1
0x00b8: s_mov_b32 s11, 0x2000c004
0x00c0: buffer_load_dwordx4 v[0:3], v0, s[8:11], offen, offset=0x68, soffset=0x80
0x00c8: s_load_dwordx16 s[20:35], s[0:1], 0x0
0x00cc: s_waitcnt 0x7f
0x00d0: image_load v10, v[4:5], s[20:27], s[0:3], dmask(r), da
0x00d8: s_waitcnt 0xf71
0x00dc: v_mad_f32 v0, v0, v7, v2
0x00e4: v_mac_f32 v3, v8, v1
0x00e8: v_cvt_u32_f32 v0, v0
0x00ec: v_cvt_u32_f32 v1, v3
0x00f0: v_min_u32 v7, s16, v0
0x00f4: v_min_u32 v8, s17, v1
0x00f8: image_load v[0:1], v[7:8], s[28:35], s[0:3], dmask(ra), da
0x0100: s_waitcnt 0xf70
0x0104: v_max_f32 v0, v0, v1, abs(s0)
0x010c: v_min_f32 v0, v10, v0
0x0110: image_store v0, v[4:5], s[20:27], s[0:3], dmask(r), da
0x0118: s_endpgm 0x0