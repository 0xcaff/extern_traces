0x0000: s_mov_b32 vcc_hi, 0x9e
0x0008: v_mov_b32 v2, 0x3c490fdb
0x0010: s_lshl_b32 vcc_lo, s2, 3
0x0014: v_sad_u32 v4, vcc_lo, 0, v0
0x001c: s_lshl_b32 vcc_lo, s3, 3
0x0020: v_add_co_u32 v5, vcc_lo, v1
0x0024: v_cvt_f32_u32 v1, v5
0x0028: v_cvt_f32_u32 v0, v4
0x002c: v_madak_f32 v1, v2, v1
0x0034: v_madak_f32 v0, v2, v0
0x003c: v_mul_f32 v1, 0x3e22f983, v1
0x0044: v_mul_f32 v2, 0x3e22f983, v0
0x004c: v_fract_f32 v0, v1
0x0050: v_fract_f32 v3, v2
0x0054: v_sin_f32 v1, v0
0x0058: s_load_dwordx8 s[20:27], s[0:1], 0x10
0x005c: v_sin_f32 v2, v3
0x0060: v_cos_f32 v3, v3
0x0064: v_mul_f32 v3, v1, v3
0x0068: s_waitcnt 0x7f
0x006c: v_mul_f32 v6, s27, v3
0x0070: v_mul_f32 v7, v1, v2
0x0074: v_cos_f32 v8, v0
0x0078: s_load_dwordx4 s[28:31], s[0:1], 0x18
0x007c: v_mul_f32 v1, s25, v8
0x0080: v_mac_f32 v6, s25, v7, -s0
0x0088: s_waitcnt 0x7f
0x008c: v_mad_f32 v2, v8, s28, v6
0x0094: v_mul_f32 v6, s26, v7
0x0098: v_mac_f32 v1, s26, v3, -s0
0x00a0: v_mul_f32 v0, s27, v2
0x00a4: v_mac_f32 v1, s28, v7
0x00a8: v_mac_f32 v6, s27, v8, -s0
0x00b0: v_mac_f32 v0, s26, -v1, s0
0x00b8: v_mul_f32 v1, s25, v1
0x00bc: v_mac_f32 v6, s28, v3
0x00c0: v_mad_f32 v0, -2.f, v0, v3
0x00c8: v_mul_f32 v10, s26, v6
0x00cc: v_mac_f32 v1, s27, -v6, s0
0x00d4: v_mad_f32 v1, -2.f, v1, v8
0x00dc: v_mac_f32 v10, s25, -v2, s0
0x00e4: v_mul_f32 v2, v0, v0
0x00e8: v_mad_f32 v6, -2.f, v10, v7
0x00f0: v_mac_f32 v2, v1, v1
0x00f4: v_mac_f32 v2, v6, v6
0x00f8: v_rsq_f32 v2, v2
0x00fc: v_mul_f32 v9, v2, v0
0x0100: v_mul_f32 v11, v2, v6
0x0104: v_max_f32 v10, v11, abs(v9), abs(s0)
0x010c: v_rcp_f32 v10, v10
0x0110: v_min_f32 v12, v11, abs(v9), abs(s0)
0x0118: v_mul_f32 v10, v10, v12
0x011c: v_mul_f32 v12, v10, v10
0x0120: v_mov_b32 v13, 0x3caaae29
0x0128: v_madak_f32 v13, v13, v12
0x0130: v_madak_f32 v13, v13, v12
0x0138: v_madak_f32 v13, v13, v12
0x0140: v_madak_f32 v12, v13, v12
0x0148: v_cmp_lt_f32 vcc, v9, abs(v11), abs(s0)
0x0150: v_mul_f32 v11, v10, v12
0x0154: v_madak_f32 v13, -2.f, v11
0x015c: v_mov_b32 v11, 0xc0490fdb
0x0164: v_cndmask_b32 v13, 0, v13
0x0168: v_cmp_gt_f32 0, v9
0x016c: v_cndmask_b32 v9, 0, v11
0x0170: v_add_f32 v9, v13, v9
0x0174: v_mac_f32 v9, v12, v10
0x0178: v_min_f32 v10, v0, v6
0x017c: v_mul_f32 v10, v2, v10
0x0180: v_max_f32 v0, v0, v6
0x0184: v_mad_f32 v6, v2, abs(v1), -abs(1.f)
0x018c: v_mul_f32 v11, 0xbdf15bef, v6
0x0194: v_mul_f32 v0, v2, v0
0x0198: v_cmp_lt_f32 vcc, v10, -v10, s0
0x01a0: v_mul_f32 v10, v6, v6
0x01a4: v_madmk_f32 v11, v10, v11
0x01ac: v_cmp_ge_f32 vcc, v0, -v0, s0
0x01b4: v_mul_f32 v0, v2, v1
0x01b8: v_mul_f32 v1, v6, v10
0x01bc: v_mul_f32 v2, 0xba8197e8, v10
0x01c4: v_madmk_f32 v2, v1, v2
0x01cc: v_mul_f32 v10, v10, v10
0x01d0: v_madmk_f32 v2, v10, v2
0x01d8: v_madmk_f32 v11, v10, v11
0x01e0: v_add_f32 v2, 0xbc014cae, v2
0x01e8: v_add_f32 v11, 0xbfb504f3, v11
0x01f0: s_and_b64 vcc, s[2:3], vcc
0x01f4: v_sqrt_f32 v6, v6
0x01f8: v_mac_f32 v11, v2, v1
0x01fc: v_madak_f32 v1, v6, v11
0x0204: v_mul_f32 v2, v6, v11
0x0208: v_cndmask_b32 v6, v9, -v9, vcc
0x0210: v_cmp_ge_f32 0, v0
0x0214: v_cndmask_b32 v0, v2, v1, -vcc
0x021c: v_mul_f32 v1, 0x3ea2f983, v0
0x0224: v_cvt_f32_u32 v2, s24
0x0228: v_mov_b32 v9, 0x3f2aaaab
0x0230: s_load_dwordx16 s[4:19], s[0:1], 0x0
0x0234: s_mov_b32 s32, 0x3e22f983
0x023c: v_mad_f32 v0, s32, v6, 0.5.f
0x0244: s_waitcnt 0x7f
0x0248: image_sample_lz v[0:2], v[0:1], s[12:19], s[20:23], dmask(rgb), da
0x0250: s_mov_b32 vcc_lo, 0x3f400000
0x0258: s_load_dwordx8 s[36:43], s[0:1], 0x1d
0x025c: s_mov_b32 vcc_hi, 0x40200000
0x0264: v_mov_b32 v10, vcc_lo
0x0268: v_mac_f32 v10, vcc_hi, v8, s0, clamp
0x0270: v_madak_f32 v6, -2.f, v10
0x0278: v_mul_f32 v12, v10, v10
0x027c: s_waitcnt 0x7f
0x0280: v_sub_f32 v10, 1.f, s43, s0
0x0288: s_load_dwordx4 s[20:23], s[0:1], 0x25
0x028c: v_mad_f32 v11, v12, v6, v10
0x0294: v_mul_f32 v6, v12, v6
0x0298: v_mad_f32 v6, v10, v6, -v11
0x02a0: s_waitcnt 0x7f
0x02a4: v_mov_b32 v11, s23
0x02a8: v_mul_f32 v10, 0x3e4bb7e4, v11
0x02b0: v_fract_f32 v10, v10
0x02b4: v_cos_f32 v10, v10
0x02b8: v_mad_f32 v3, -s20, v3, v10
0x02c0: v_mac_f32 v3, s21, v8
0x02c4: v_mac_f32 v3, s22, v7
0x02c8: v_mul_f32 v7, 0x3da2f983, v11
0x02d0: v_fract_f32 v7, v7
0x02d4: v_cos_f32 v7, v7
0x02d8: v_sub_f32 v7, v7, v10
0x02dc: v_rcp_f32 v7, v7
0x02e0: v_mul_f32 v3, v7, v3, s0, clamp
0x02e8: v_mov_b32 v11, 0xbeaaaaab
0x02f0: v_mul_f32 v7, v3, v3
0x02f4: v_mul_f32 v8, v6, v7
0x02f8: s_load_dword s33, s[0:1], 0x1c
0x02fc: v_mov_b32 v7, s40
0x0300: v_mul_f32 v7, s42, v7
0x0304: v_madak_f32 v3, -2.f, v3
0x030c: v_mul_f32 v3, v8, v3
0x0310: v_cvt_f32_i32 v8, 6
0x0314: s_waitcnt 0xf70
0x0318: v_mul_f32 v10, 0x3e59b3d0, v0
0x0320: v_madmk_f32 v10, v1, v10
0x0328: v_madmk_f32 v10, v2, v10
0x0330: v_sub_f32 v14, v2, v10
0x0334: v_sub_f32 v12, v1, v10
0x0338: v_mul_f32 v1, s29, v14
0x033c: v_sub_f32 v2, v0, v10
0x0340: v_mul_f32 v0, s29, v2
0x0344: v_mad_f32 v13, s29, v14, v10
0x034c: v_mad_f32 v14, s29, v12, v10
0x0354: v_mul_f32 v12, s29, v12
0x0358: v_cmp_le_f32 v13, v14
0x035c: v_mad_f32 v14, s29, v2, v10
0x0364: v_max_f32 v2, v12, v1
0x0368: v_add_f32 v15, v10, v2
0x036c: v_min_f32 v2, v0, v2
0x0370: v_max3_f32 v0, v0, v12, v1
0x0378: v_add_f32 v0, v10, v0
0x037c: v_cndmask_b32 v13, -1.f, 0, vcc
0x0384: v_cndmask_b32 v9, v9, v11
0x0388: v_min3_f32 v11, v2, v12, v1
0x0390: v_min_f32 v12, v12, v1
0x0394: v_add_f32 v1, v10, v11
0x0398: v_sub_f32 v1, v0, v1
0x039c: v_add_f32 v11, v10, v12
0x03a0: v_cmp_le_f32 v15, v14
0x03a4: v_sub_f32 v10, v10, v11
0x03a8: v_madak_f32 v11, v8, v1
0x03b0: v_rcp_f32 v11, v11
0x03b4: v_cndmask_b32 v13, v9, v13
0x03b8: v_add_f32 v2, v10, v2
0x03bc: v_add_f32 v9, 0x2edbe6ff, v0
0x03c4: v_mac_f32 v13, v2, v11
0x03c8: v_add_f32 v2, s41, abs(v13), s0
0x03d0: v_rcp_f32 v9, v9
0x03d4: v_mul_f32 v1, v9, v1
0x03d8: v_add_f32 v9, 0x3eaaaaab, v2
0x03e0: v_fract_f32 v9, v9
0x03e4: v_madak_f32 v9, v8, v9
0x03ec: v_add_f32 v9, -1.f, abs(v9), s0, clamp
0x03f4: v_add_f32 v10, -1.f, v9
0x03f8: v_mul_f32 v9, v0, v1
0x03fc: v_mad_f32 v1, v9, v10, v0
0x0404: v_log_f32 v1, v1, s0, abs(s0)
0x040c: s_waitcnt 0x7f
0x0410: v_mul_f32 v1, s33, v1
0x0414: v_exp_f32 v1, v1
0x0418: v_sub_f32 v10, s38, v1
0x041c: v_mac_f32 v1, s39, v10
0x0420: v_add_f32 v10, 0x3f2aaaab, v2
0x0428: v_fract_f32 v10, v10
0x042c: v_fract_f32 v2, v2
0x0430: v_madak_f32 v2, v8, v2
0x0438: v_madak_f32 v8, v8, v10
0x0440: v_add_f32 v8, -1.f, abs(v8), s0, clamp
0x0448: v_add_f32 v10, -1.f, abs(v2), s0, clamp
0x0450: v_add_f32 v2, -1.f, v8
0x0454: v_add_f32 v8, -1.f, v10
0x0458: v_mad_f32 v8, v9, v8, v0
0x0460: v_mac_f32 v0, v2, v9
0x0464: v_log_f32 v0, v0, s0, abs(s0)
0x046c: v_mul_f32 v2, s31, v0
0x0470: v_log_f32 v8, v8, s0, abs(s0)
0x0478: v_exp_f32 v2, v2
0x047c: v_mul_f32 v0, s30, v8
0x0480: v_sub_f32 v8, s37, v2
0x0484: v_exp_f32 v0, v0
0x0488: v_mac_f32 v2, s39, v8
0x048c: v_sub_f32 v8, s36, v0
0x0490: v_mac_f32 v0, s39, v8
0x0494: v_max_f32 v1, 0, v1
0x0498: v_max_f32 v2, 0, v2
0x049c: v_max_f32 v0, 0, v0
0x04a0: v_mul_f32 v1, v7, v1
0x04a4: v_mul_f32 v8, v7, v2
0x04a8: v_mul_f32 v0, v7, v0
0x04ac: v_mul_f32 v2, v1, v6
0x04b0: v_mul_f32 v1, v8, v6
0x04b4: v_mul_f32 v0, v0, v6
0x04b8: image_store v[0:3], v[4:5], s[4:11], s[0:3], dmask(rgba)
0x04c0: s_endpgm 0x0