---
source: packages/gcn/src/lib.rs
expression: test_shader(&data)
---
[
    Instruction {
        inner: SOP1(
            SOP1Instruction {
                op: s_swappc_b64,
                ssrc0: Destination(
                    ScalarGPR(
                        0,
                    ),
                ),
                sdst: ScalarGPR(
                    0,
                ),
            },
        ),
        program_counter: 0,
    },
    Instruction {
        inner: SMEM(
            SMEMInstruction {
                op: s_load_dwordx4,
                offset: 0,
                imm: true,
                sbase: 3,
                sdst: ScalarGPR(
                    0,
                ),
            },
        ),
        program_counter: 4,
    },
    Instruction {
        inner: SOPP(
            SOPPInstruction {
                op: s_waitcnt,
                simm16: 49279,
            },
        ),
        program_counter: 8,
    },
    Instruction {
        inner: SMEM(
            SMEMInstruction {
                op: s_buffer_load_dwordx4,
                offset: 8,
                imm: true,
                sbase: 0,
                sdst: ScalarGPR(
                    4,
                ),
            },
        ),
        program_counter: 12,
    },
    Instruction {
        inner: SMEM(
            SMEMInstruction {
                op: s_buffer_load_dwordx4,
                offset: 12,
                imm: true,
                sbase: 0,
                sdst: ScalarGPR(
                    8,
                ),
            },
        ),
        program_counter: 16,
    },
    Instruction {
        inner: SMEM(
            SMEMInstruction {
                op: s_buffer_load_dwordx4,
                offset: 4,
                imm: true,
                sbase: 0,
                sdst: ScalarGPR(
                    12,
                ),
            },
        ),
        program_counter: 20,
    },
    Instruction {
        inner: SMEM(
            SMEMInstruction {
                op: s_buffer_load_dwordx4,
                offset: 0,
                imm: true,
                sbase: 0,
                sdst: ScalarGPR(
                    0,
                ),
            },
        ),
        program_counter: 24,
    },
    Instruction {
        inner: SOPP(
            SOPPInstruction {
                op: s_waitcnt,
                simm16: 113,
            },
        ),
        program_counter: 28,
    },
    Instruction {
        inner: VOP2(
            VOP2Instruction {
                op: v_mul_f32,
                src0: Scalar(
                    Destination(
                        ScalarGPR(
                            4,
                        ),
                    ),
                ),
                vsrc1: VectorGPR {
                    register_idx: 6,
                },
                vdst: VectorGPR {
                    register_idx: 7,
                },
            },
        ),
        program_counter: 32,
    },
    Instruction {
        inner: VOP2(
            VOP2Instruction {
                op: v_mul_f32,
                src0: Scalar(
                    Destination(
                        ScalarGPR(
                            5,
                        ),
                    ),
                ),
                vsrc1: VectorGPR {
                    register_idx: 6,
                },
                vdst: VectorGPR {
                    register_idx: 0,
                },
            },
        ),
        program_counter: 36,
    },
    Instruction {
        inner: VOP2(
            VOP2Instruction {
                op: v_mul_f32,
                src0: Scalar(
                    Destination(
                        ScalarGPR(
                            6,
                        ),
                    ),
                ),
                vsrc1: VectorGPR {
                    register_idx: 6,
                },
                vdst: VectorGPR {
                    register_idx: 1,
                },
            },
        ),
        program_counter: 40,
    },
    Instruction {
        inner: VOP2(
            VOP2Instruction {
                op: v_mul_f32,
                src0: Scalar(
                    Destination(
                        ScalarGPR(
                            7,
                        ),
                    ),
                ),
                vsrc1: VectorGPR {
                    register_idx: 6,
                },
                vdst: VectorGPR {
                    register_idx: 6,
                },
            },
        ),
        program_counter: 44,
    },
    Instruction {
        inner: VOP2(
            VOP2Instruction {
                op: v_add_f32,
                src0: Scalar(
                    Destination(
                        ScalarGPR(
                            8,
                        ),
                    ),
                ),
                vsrc1: VectorGPR {
                    register_idx: 7,
                },
                vdst: VectorGPR {
                    register_idx: 7,
                },
            },
        ),
        program_counter: 48,
    },
    Instruction {
        inner: VOP2(
            VOP2Instruction {
                op: v_add_f32,
                src0: Scalar(
                    Destination(
                        ScalarGPR(
                            9,
                        ),
                    ),
                ),
                vsrc1: VectorGPR {
                    register_idx: 0,
                },
                vdst: VectorGPR {
                    register_idx: 0,
                },
            },
        ),
        program_counter: 52,
    },
    Instruction {
        inner: VOP2(
            VOP2Instruction {
                op: v_add_f32,
                src0: Scalar(
                    Destination(
                        ScalarGPR(
                            10,
                        ),
                    ),
                ),
                vsrc1: VectorGPR {
                    register_idx: 1,
                },
                vdst: VectorGPR {
                    register_idx: 1,
                },
            },
        ),
        program_counter: 56,
    },
    Instruction {
        inner: VOP2(
            VOP2Instruction {
                op: v_add_f32,
                src0: Scalar(
                    Destination(
                        ScalarGPR(
                            11,
                        ),
                    ),
                ),
                vsrc1: VectorGPR {
                    register_idx: 6,
                },
                vdst: VectorGPR {
                    register_idx: 6,
                },
            },
        ),
        program_counter: 60,
    },
    Instruction {
        inner: VOP2(
            VOP2Instruction {
                op: v_mac_f32,
                src0: Scalar(
                    Destination(
                        ScalarGPR(
                            12,
                        ),
                    ),
                ),
                vsrc1: VectorGPR {
                    register_idx: 5,
                },
                vdst: VectorGPR {
                    register_idx: 7,
                },
            },
        ),
        program_counter: 64,
    },
    Instruction {
        inner: VOP2(
            VOP2Instruction {
                op: v_mac_f32,
                src0: Scalar(
                    Destination(
                        ScalarGPR(
                            13,
                        ),
                    ),
                ),
                vsrc1: VectorGPR {
                    register_idx: 5,
                },
                vdst: VectorGPR {
                    register_idx: 0,
                },
            },
        ),
        program_counter: 68,
    },
    Instruction {
        inner: VOP2(
            VOP2Instruction {
                op: v_mac_f32,
                src0: Scalar(
                    Destination(
                        ScalarGPR(
                            14,
                        ),
                    ),
                ),
                vsrc1: VectorGPR {
                    register_idx: 5,
                },
                vdst: VectorGPR {
                    register_idx: 1,
                },
            },
        ),
        program_counter: 72,
    },
    Instruction {
        inner: VOP2(
            VOP2Instruction {
                op: v_mac_f32,
                src0: Scalar(
                    Destination(
                        ScalarGPR(
                            15,
                        ),
                    ),
                ),
                vsrc1: VectorGPR {
                    register_idx: 5,
                },
                vdst: VectorGPR {
                    register_idx: 6,
                },
            },
        ),
        program_counter: 76,
    },
    Instruction {
        inner: VOP2(
            VOP2Instruction {
                op: v_mac_f32,
                src0: Scalar(
                    Destination(
                        ScalarGPR(
                            0,
                        ),
                    ),
                ),
                vsrc1: VectorGPR {
                    register_idx: 4,
                },
                vdst: VectorGPR {
                    register_idx: 7,
                },
            },
        ),
        program_counter: 80,
    },
    Instruction {
        inner: VOP2(
            VOP2Instruction {
                op: v_mac_f32,
                src0: Scalar(
                    Destination(
                        ScalarGPR(
                            1,
                        ),
                    ),
                ),
                vsrc1: VectorGPR {
                    register_idx: 4,
                },
                vdst: VectorGPR {
                    register_idx: 0,
                },
            },
        ),
        program_counter: 84,
    },
    Instruction {
        inner: VOP2(
            VOP2Instruction {
                op: v_mac_f32,
                src0: Scalar(
                    Destination(
                        ScalarGPR(
                            2,
                        ),
                    ),
                ),
                vsrc1: VectorGPR {
                    register_idx: 4,
                },
                vdst: VectorGPR {
                    register_idx: 1,
                },
            },
        ),
        program_counter: 88,
    },
    Instruction {
        inner: VOP2(
            VOP2Instruction {
                op: v_mac_f32,
                src0: Scalar(
                    Destination(
                        ScalarGPR(
                            3,
                        ),
                    ),
                ),
                vsrc1: VectorGPR {
                    register_idx: 4,
                },
                vdst: VectorGPR {
                    register_idx: 6,
                },
            },
        ),
        program_counter: 92,
    },
    Instruction {
        inner: EXP(
            ExpInstruction {
                en: En(
                    15,
                ),
                tgt: Tgt(
                    12,
                ),
                compr: false,
                done: true,
                vm: false,
                vsrc0: VectorGPR {
                    register_idx: 7,
                },
                vsrc1: VectorGPR {
                    register_idx: 0,
                },
                vsrc2: VectorGPR {
                    register_idx: 1,
                },
                vsrc3: VectorGPR {
                    register_idx: 6,
                },
            },
        ),
        program_counter: 96,
    },
    Instruction {
        inner: SOPP(
            SOPPInstruction {
                op: s_waitcnt,
                simm16: 16240,
            },
        ),
        program_counter: 104,
    },
    Instruction {
        inner: EXP(
            ExpInstruction {
                en: En(
                    3,
                ),
                tgt: Tgt(
                    32,
                ),
                compr: false,
                done: false,
                vm: false,
                vsrc0: VectorGPR {
                    register_idx: 8,
                },
                vsrc1: VectorGPR {
                    register_idx: 9,
                },
                vsrc2: VectorGPR {
                    register_idx: 128,
                },
                vsrc3: VectorGPR {
                    register_idx: 128,
                },
            },
        ),
        program_counter: 108,
    },
    Instruction {
        inner: SOPP(
            SOPPInstruction {
                op: s_endpgm,
                simm16: 0,
            },
        ),
        program_counter: 116,
    },
]
